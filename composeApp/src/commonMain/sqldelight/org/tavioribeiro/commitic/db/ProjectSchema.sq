CREATE TABLE projects (
  id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
  name TEXT NOT NULL,
  directory_path TEXT NOT NULL
);


-- INSERTS
insertProject:
INSERT INTO projects (name, directory_path)
VALUES (?, ?);

-- UPDATES
updateProject:
UPDATE projects SET name = ?, directory_path = ? WHERE id = ?;


-- DELETES
deleteProjectById:
DELETE FROM projects WHERE id = ?;


-- GETTERS (SELECTS)
getAllProjects:
SELECT * FROM projects ORDER BY id DESC;

getProjectById:
SELECT * FROM projects WHERE id = ?;

-- GETTERS COM JOIN (SELECTS WITH JOIN)
getProjectWithBranches:
SELECT p.id,
       p.name AS project_name,
       p.directory_path,
       b.id,
       b.name AS branch_name
FROM projects p
LEFT JOIN branches b ON b.project_id = p.id
WHERE p.id = ?
ORDER BY b.id DESC;

getProjectWithBranchesAndCommits:
SELECT p.id,
       p.name AS project_name,
       p.directory_path,
       b.id,
       b.name AS branch_name,
       c.id,
       c.message,
       c.timestamp
FROM projects p
LEFT JOIN branches b ON b.project_id = p.id
LEFT JOIN commits c ON c.branch_id = b.id
WHERE p.id = ?
ORDER BY b.id DESC, c.timestamp DESC;


getAllBranchesWithCommits:
SELECT b.id,
       b.project_id,
       b.name AS branch_name,
       c.id,
       c.message,
       c.timestamp
FROM branches b
LEFT JOIN commits c ON c.branch_id = b.id
ORDER BY b.id DESC, c.timestamp DESC;